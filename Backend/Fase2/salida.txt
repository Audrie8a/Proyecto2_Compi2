package main;
import("fmt");
var P, H float64;
var stack[78000]float64;
var heap[22]float64;
var t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22 float64;

func printString(){
 	t0=P;
	t1=stack[int(t0)];
	L1:
		t2=heap[int(t1)]; 
		if t2 == -1 {goto L0;}
		fmt.Printf("%c", int(t2));
 		t1=t1+1; 
		goto L1;
	L0:
		return;
}
func potencia(){
	t16 = P;
	t17 = stack[int(t16)];
	t16 = t16 + 1;
	t18 = stack[int(t16)];
	t16 = t17;
	L2:
		if t18 <= 1 {goto L3;}
		t17 = t17 * t16;
		t18 = t18 - 1;
		goto L2;
	L3:
		if t18==0 {goto L4;}
		if t18<0 {goto L5;}
		stack[int(3)] = t17;
		return;
	L4:
		t20=t20/t20;
		stack[int(P)] = t20;
	L5:
		t18=t18*-1;
	L6:
		if t18 <= 1 {goto L7;}
		t17 = t17 * t16;
		t18 = t18 - 1;
		 goto L6;
	L7:
		t19=1/t17;
		stack[int(3)] = t19;
		return;
}

func main(){
t3=H;

heap[int(H)]=104;
H = H + 1;
heap[int(H)]=111;
H = H + 1;
heap[int(H)]=108;
H = H + 1;
heap[int(H)]=97;
H = H + 1;
heap[int(H)]=-1;
H = H + 1;
t4=0;

stack[int(t4)]=t3;

P = P + 0;
printString();

t5=stack[int(P)];

P = P - 0;
t6=H;

heap[int(H)]=97;
H = H + 1;
heap[int(H)]=100;
H = H + 1;
heap[int(H)]=105;
H = H + 1;
heap[int(H)]=111;
H = H + 1;
heap[int(H)]=115;
H = H + 1;
heap[int(H)]=-1;
H = H + 1;
t7=0;

stack[int(t7)]=t6;

P = P + 0;
printString();

t8=stack[int(P)];

P = P - 0;
t9=H;

heap[int(H)]=104;
H = H + 1;
heap[int(H)]=111;
H = H + 1;
heap[int(H)]=108;
H = H + 1;
heap[int(H)]=97;
H = H + 1;
heap[int(H)]=-1;
H = H + 1;
t10=0;

stack[int(t10)]=t9;

P = P + 0;
printString();

t11=stack[int(P)];

P = P - 0;
fmt.Printf("%c",10);
t12=H;

heap[int(H)]=65;
H = H + 1;
heap[int(H)]=32;
H = H + 1;
heap[int(H)]=118;
H = H + 1;
heap[int(H)]=101;
H = H + 1;
heap[int(H)]=114;
H = H + 1;
heap[int(H)]=-1;
H = H + 1;
t13=0;

stack[int(t13)]=t12;

P = P + 0;
printString();

t14=stack[int(P)];

P = P - 0;
fmt.Printf("%d",int(18));
t15 = 5 + 7;
t21 = 1  ;
stack[int(t21)] = 18;
t21 = 2  ;
stack[int(t21)] = t15;
P = P + 1;
potencia();
t22 = stack[int(3)];
P = P - 1;
fmt.Printf("%d",int(t22));
}
